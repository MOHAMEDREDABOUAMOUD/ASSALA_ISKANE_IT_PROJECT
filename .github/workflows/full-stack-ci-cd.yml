name: Full Stack CI/CD

on:
  push:
    branches: [ main, reda ]
  pull_request:
    branches: [ main, reda ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: reda
        ports:
          - 3306:3306
        healthcheck:
          test: ["CMD", "mysqladmin", "ping", "--silent"]
          interval: 10s
          timeout: 5s
          retries: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # ðŸ“¦ FRONTEND: Install and build React
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies (React)
        working-directory: FrontEnd/front_v2
        run: npm install

      - name: Build React app
        working-directory: FrontEnd/front_v2
        run: CI=false npm run build

      # â˜• BACKEND: Build Spring Boot project with Maven
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        working-directory: BackEnd/ASSALA_ISKANE_SpringBoot_BackEnd
        run: mvn clean install

  # Optional: Dockerize and deploy (CD)
  # dockerize:
  #   needs: build-and-test
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Log in to DockerHub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Build and push Docker image
  #       run: |
  #         docker build -t ${{ secrets.DOCKER_USERNAME }}/your-app:latest .
  #         docker push ${{ secrets.DOCKER_USERNAME }}/your-app:latest
